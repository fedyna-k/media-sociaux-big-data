services:

  waf-in:
    build: ./waf-in
    ports:
      - "${WAF_IN_PORT}:${WAF_IN_PORT}"
    volumes:
      - logs:/logs
    depends_on:
      - web-server
    environment:
      - WEB_SERVER_PORT=${WEB_SERVER_PORT}
      - WAF_IN_PORT=${WAF_IN_PORT}

  web-server:
    build: ./web-server
    depends_on:
      - machine-learning
      - database
      - data-collector
    volumes:
      - logs:/logs
    environment:
      - WEB_SERVER_PORT=${WEB_SERVER_PORT}
      - MACHINE_LEARNING_PORT=${MACHINE_LEARNING_PORT}
      - DATABASE_PORT=${DATABASE_PORT}

  machine-learning:
    build: ./machine-learning
    volumes:
      - logs:/logs
    environment:
      - MACHINE_LEARNING_PORT=${MACHINE_LEARNING_PORT}

  data-collector:
    build: ./data-collector
    depends_on:
      - database
    volumes:
      - logs:/logs
    environment:
      - DATA_COLLECTOR_PORT=${DATA_COLLECTOR_PORT}
      - DATABASE_PORT=${DATABASE_PORT}
      - YOUTUBE_API_KEY=${YOUTUBE_API_KEY}

  database:
    build: ./database
    depends_on:
      - mongo
    volumes:
      - logs:/logs
    environment:
      - DATA_COLLECTOR_PORT=${DATA_COLLECTOR_PORT}
      - DATABASE_PORT=${DATABASE_PORT}
      - MONGO_USERNAME=${MONGO_USERNAME}
      - MONGO_PASSWORD=${MONGO_PASSWORD}
  
  mongo:
    image: mongo
    restart: always
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD}
    volumes:
      - mongo-db:/data/db
      - mongo-config:/data/configdb


volumes:
  logs:
  mongo-db:
  mongo-config:
